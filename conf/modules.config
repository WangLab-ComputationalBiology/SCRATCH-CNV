process {

    // Alignment configuration
    withName: "SAMPLESHEET_CHECK" {
        publishDir = [
            [
                path: { "${params.outdir}/pipeline_info" },
                mode: 'copy',
                overwrite: true
            ]
        ]
    }

    withName: "INFERCNV" {
        ext.args = {
                [
                    params.project_name ? "project_name:${params.project_name}" : '',
                    params.input_analysis_mode ? "input_analysis_mode:${params.input_model}" : '',
                    params.input_model ? "input_model:${params.input_model}" : '',
                    "work_directory:\$PWD"
                ].join(' -P ').trim()
            }
        ext.when = { !params.skip_infercnv }
        publishDir = [
            [
                path: { "${params.outdir}/data/${task.process}" },
                pattern: 'data/*',
                mode: 'copy',
                overwrite: true
            ],
            [
                path: { "${params.outdir}/" },
                pattern: 'report/*.html',
                mode: 'copy',
                overwrite: true
            ],
            [
                path: { "${params.outdir}/data/${task.process}" },
                pattern: '_freeze/**/figure-html/*.png',
                saveAs: { file -> file.endsWith('.png') ? "figures/${file.split('/').last()}" : null },
                mode: 'copy',
                overwrite: true
            ],
        ]
    }

    withName: "SCEVAN" {
        ext.args = {
                [
                    params.project_name ? "project_name:${params.project_name}" : '',
                    "work_directory:\$PWD"
                ].join(' -P ').trim()
            }
        ext.when = { !params.skip_scevan }
        publishDir = [
            [
                path: { "${params.outdir}/data/${task.process}" },
                pattern: 'data/*',
                mode: 'copy',
                overwrite: true
            ],
            [
                path: { "${params.outdir}/" },
                pattern: 'report/*.html',
                mode: 'copy',
                overwrite: true
            ],
            [
                path: { "${params.outdir}/data/${task.process}" },
                pattern: '_freeze/**/figure-html/*.png',
                saveAs: { file -> file.endsWith('.png') ? "figures/${file.split('/').last()}" : null },
                mode: 'copy',
                overwrite: true
            ],
        ]
    }


}
